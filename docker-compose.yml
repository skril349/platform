# docker-compose.yml
version: "3.8"
services:

  api:
    image: strapi/strapi
    container_name: api
    restart: unless-stopped
    #env_file: environment.env
    environment:
      - DATABASE_CLIENT=mongo
      - DATABASE_NAME=strapi
      - DATABASE_HOST=mongo
      - DATABASE_PORT=27017
      - DATABASE_USERNAME=rootname
      - DATABASE_PASSWORD=pass1234word
    depends_on:
      - mongo
      - mongo-express
    #    links:
    #      - mongo:mongo
    networks:
      - strapi-app-network
    volumes:
      - ./server/app:/srv/app
    ports:
      - "1337:1337"

  mongo:
    image: mongo:5.0
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootname
      - MONGO_INITDB_ROOT_PASSWORD=pass1234word
    restart: unless-stopped
    ports:
      - "27017:27017"
    networks:
      - strapi-app-network
    volumes:
      - ./server/database/db:/data/db
      - ./server/database/dev.archive:/Databases/dev.archive
      - ./server/database/production:/Databases/production
      - strapidata:/data/db

  mongo-express:
    image: mongo-express
    container_name: mexpress
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootname
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pass1234word
      - ME_CONFIG_MONGODB_URL=mongodb://rootname:pass1234word@mongo:27017/?authSource=admin
      - ME_CONFIG_BASICAUTH_USERNAME=mexpress
      - ME_CONFIG_BASICAUTH_PASSWORD=mexpress
    depends_on:
      - mongo
    restart: unless-stopped
    networks:
      - strapi-app-network
    ports:
      - "8081:8081"

  mqtt:
    container_name: mosquitto
    image: eclipse-mosquitto:1.6
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - .server/mqtt/config:/mqtt/config
      - .server/mqtt/log:/mqtt/log
      - .server/mqtt/data/:/mqtt/data
    restart: unless-stopped

  client:
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    build:
      dockerfile: Dockerfile
      context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app
    ports:
      - "3000:3000"
    depends_on:
      - mongo
      - mongo-express

  nginx:
    depends_on:
      - api
      - client
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./nginx
    ports:
      - "3050:80"

#      - nginx

#  nginx:
#    build: ./client/app/nginx
#    restart: unless-stopped
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - ./client/app/volume1:/usr/share/nginx/html
#    links:
#      - "mongo"
#      - "api"
      

networks:
  strapi-app-network:
    driver: bridge

volumes:
  strapidata:
